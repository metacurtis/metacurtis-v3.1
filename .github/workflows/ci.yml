# .github/workflows/ci.yml

# Workflow name displayed on GitHub Actions tab
name: MetaCurtis CI/CD Checks

# Controls when the workflow will run
on:
  push:
    branches: [ main, development ] # Trigger on pushes to main & development
  pull_request:
    branches: [ main, development ] # Trigger on PRs targeting main & development
  workflow_dispatch: {} # Allow manual triggering from the GitHub Actions tab

# Defines the jobs that will run as part of the workflow
jobs:
  # Job 1: Linting, Formatting Checks, and Testing
  lint-and-test:
    name: Lint, Format & Test
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    steps: # List of steps for this job
      - name: Checkout code
        uses: actions/checkout@v4 # Use v4 of the checkout action

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Use v4 of the setup-node action
        with:
          node-version: '20.x' # Specify desired Node.js version
          cache: 'npm' # Enable caching for npm dependencies

      - name: Install dependencies
        run: npm ci # Use 'ci' for clean, faster installs based on package-lock.json

      - name: Check Formatting (Prettier)
        run: npm run format:check # Run your Prettier check script

      - name: Run Linter (ESLint)
        run: npm run lint # Run your ESLint check script (uses eslint.config.js)

      - name: Run Tests (Vitest)
        run: npm run test # Includes passWithNoTests via vite.config.js or package.json script

  # Job 2: Build the Project
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: lint-and-test # This job depends on the 'lint-and-test' job succeeding
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Build
        run: npm run build # Run your Vite build script

      - name: Upload Production Artifact
        uses: actions/upload-artifact@v4 # Use v4 of the upload-artifact action
        with:
          name: build-artifact # Name for the artifact
          path: dist/ # Path of the directory to upload (Vite's default output)

  # Job 3: Run Lighthouse Checks
  lighthouse:
    name: Lighthouse Checks
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job succeeding
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Ensure code is checked out

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci # Install dependencies (including @lhci/cli)

      - name: Download Build Artifact
        uses: actions/download-artifact@v4 # Use v4 of the download action
        with:
          name: build-artifact # Name must match the upload step
          path: dist/ # Download artifact content into the 'dist' directory

      - name: Start Preview Server & Wait
        run: | # Use multi-line run command
          npm run preview & # Start Vite preview server in the background
          npx wait-on http://localhost:4173 -t 60000 # Wait for the server to be ready (60s timeout)

      # ---vvv DEBUGGING STEP vvv---
      - name: Display lighthouserc.json content
        run: cat lighthouserc.json # Print the content of the config file in the runner
      # ---^^^ DEBUGGING STEP ^^^---

      - name: Run Lighthouse CI
        run: npm run lighthouse # Runs 'lhci autorun --config=./lighthouserc.json'
        env:
           # Optional: If using the LHCI GitHub App, provide the token as a secret
           LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}